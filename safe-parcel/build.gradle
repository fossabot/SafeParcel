/*
 * Copyright 2013-2015 microG Project Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'de.mobilej.unmock:UnMockPlugin:0.7.3'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'de.mobilej.unmock'

String getMyVersionName() {
    def stdout = new ByteArrayOutputStream()
    if (rootProject.file("gradlew").exists())
        exec { commandLine 'git', 'describe', '--tags', '--always', '--dirty'; standardOutput = stdout }
    else // automatic build system, don't tag dirty
        exec { commandLine 'git', 'describe', '--tags', '--always'; standardOutput = stdout }
    return stdout.toString().trim().substring(1)
}

group = 'org.microg'
version = getMyVersionName()

android {
    compileSdkVersion androidCompileSdk()
    buildToolsVersion "$androidBuildVersionTools"

    defaultConfig {
        versionName getMyVersionName()
        minSdkVersion 9
        targetSdkVersion 29
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

unMock {
    keep "android.util.SparseArray"
    keep "com.android.internal.util.ArrayUtils"
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.1.0'
}
